-- D.7
  section D7   
  generic 5 rightassoc (_ ↔ _) 
 X ↔ Y == ℙ (X × Y) 
  generic 5 rightassoc (_ → _) 
 X → Y == { f : X ↔ Y | ∀ x : X ⦁ ∃↘1↖ y : Y ⦁ (x, y) ∈ f } 
╷═[X, Y]dom  : (X ↔ Y) → ℙ X | ∀ r : X ↔ Y ⦁ dom r = { p : r ⦁ p.1 } 
╷═[X, Y]ran  : (X ↔ Y) → ℙ Y | ∀ r : X ↔ Y ⦁ ran r = { p : r ⦁ p.2 } 
  function 40 leftassoc (_ ∩ _) 
╷═[X]_ ∩ _ : ℙ X × ℙ X → ℙ X | ∀ a, b : ℙ X ⦁ a ∩ b = { x : X | x ∈ a ∧ x ∈ b } 
  generic 5 rightassoc (_ ⇸ _) 
 X ⇸ Y == { f : X ↔ Y | ∀ p, q : f | p.1 = q.1 ⦁ p.2 = q.2 } 
  generic 5 rightassoc (_ ⤀ _) 
 X ⤀ Y == { f : X ⇸ Y | ran f = Y } 
 ∅[X] == { x : X | false } 
╷═[X]⋂  : ℙ ℙ X → ℙ X | ∀ A : ℙ ℙ X ⦁ ⋂ A = { x : X | ∀ a : A ⦁ x ∈ a } 
  function 30 leftassoc (_ ∪ _) 
╷═[X]_ ∪ _ : ℙ X × ℙ X → ℙ X | ∀ a, b : ℙ X ⦁ a ∪ b = { x : X | x ∈ a ∨ x ∈ b } 
  generic (𝔽 _) 
 𝔽 X == ⋂ { A : ℙ ℙ X | ∅ ∈ A ∧ (∀ a : A; x : X ⦁ a ∪ {x} ∈ A) } 
  generic 5 rightassoc (_ ⇻ _) 
 X ⇻ Y == (X ⇸ Y) ∩ 𝔽 (X × Y) 
--  generic (seq _) 
-- seq X == { f : ℕ ⇻ X | dom f = 1 .. # f } 
--  function (〈 ,, 〉) 
-- 〈 ,, 〉[X] == λ s : seq X ⦁ s 
-- x == 〈  〉   
-- x == 〈 1,2,3 〉   
